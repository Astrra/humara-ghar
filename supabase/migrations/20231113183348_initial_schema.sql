create table "public"."room_required_listings" (
    "listing_id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "created_by" uuid not null default auth.uid(),
    "location" text not null,
    "looking_for_gender" text not null default 'any'::text,
    "approx_rent" text not null,
    "occupancy" text not null default 'any'::text,
    "contact_number" text,
    "date_available" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
    "allow_teams" boolean not null default false,
    "allow_pg" boolean not null default false,
    "description" text
);


alter table "public"."room_required_listings" enable row level security;

create table "public"."roommate_required_listings" (
    "listing_id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "created_by" uuid not null default auth.uid(),
    "location" text not null,
    "looking_for_gender" text not null default 'any'::text,
    "occupancy" text not null default 'any'::text,
    "contact_number" text,
    "date_available" timestamp with time zone default (now() AT TIME ZONE 'utc'::text),
    "images" text[],
    "allow_teams" boolean not null default false,
    "amenities" text[] not null,
    "description" text,
    "approx_rent" text not null
);


alter table "public"."roommate_required_listings" enable row level security;

create table "public"."test_table" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text default 'NULL'::text
);


create table "public"."user_preferences" (
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null default auth.uid(),
    "prefs" json
);


alter table "public"."user_preferences" enable row level security;

create table "public"."user_profiles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null default auth.uid(),
    "name" character varying not null,
    "email_id" text not null,
    "user_type" text not null,
    "gender" text not null,
    "dob" date not null
);


alter table "public"."user_profiles" enable row level security;

CREATE UNIQUE INDEX room_required_listings_pkey ON public.room_required_listings USING btree (listing_id);

CREATE UNIQUE INDEX roommate_required_listings_pkey ON public.roommate_required_listings USING btree (listing_id);

CREATE UNIQUE INDEX test_table_pkey ON public.test_table USING btree (id);

CREATE UNIQUE INDEX user_preferences_pkey ON public.user_preferences USING btree (user_id);

CREATE UNIQUE INDEX user_profiles_email_id_key ON public.user_profiles USING btree (email_id);

CREATE UNIQUE INDEX user_profiles_pkey ON public.user_profiles USING btree (user_id);

CREATE UNIQUE INDEX user_profiles_user_id_key ON public.user_profiles USING btree (user_id);

alter table "public"."room_required_listings" add constraint "room_required_listings_pkey" PRIMARY KEY using index "room_required_listings_pkey";

alter table "public"."roommate_required_listings" add constraint "roommate_required_listings_pkey" PRIMARY KEY using index "roommate_required_listings_pkey";

alter table "public"."test_table" add constraint "test_table_pkey" PRIMARY KEY using index "test_table_pkey";

alter table "public"."user_preferences" add constraint "user_preferences_pkey" PRIMARY KEY using index "user_preferences_pkey";

alter table "public"."user_profiles" add constraint "user_profiles_pkey" PRIMARY KEY using index "user_profiles_pkey";

alter table "public"."room_required_listings" add constraint "room_required_listings_created_by_fkey" FOREIGN KEY (created_by) REFERENCES user_profiles(user_id) ON DELETE CASCADE not valid;

alter table "public"."room_required_listings" validate constraint "room_required_listings_created_by_fkey";

alter table "public"."roommate_required_listings" add constraint "roommate_required_listings_created_by_fkey" FOREIGN KEY (created_by) REFERENCES user_profiles(user_id) ON DELETE CASCADE not valid;

alter table "public"."roommate_required_listings" validate constraint "roommate_required_listings_created_by_fkey";

alter table "public"."user_preferences" add constraint "user_preferences_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(user_id) ON DELETE CASCADE not valid;

alter table "public"."user_preferences" validate constraint "user_preferences_user_id_fkey";

alter table "public"."user_profiles" add constraint "user_profiles_email_id_key" UNIQUE using index "user_profiles_email_id_key";

alter table "public"."user_profiles" add constraint "user_profiles_user_id_key" UNIQUE using index "user_profiles_user_id_key";

create policy "Enable insert for authenticated users only"
on "public"."room_required_listings"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."room_required_listings"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."roommate_required_listings"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."roommate_required_listings"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."user_preferences"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."user_preferences"
as permissive
for select
to public
using (true);


create policy "Enable insert for authenticated users only"
on "public"."user_profiles"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."user_profiles"
as permissive
for select
to public
using (true);



